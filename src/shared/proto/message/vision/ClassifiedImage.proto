/*
 * This file is part of the NUbots Codebase.
 *
 * The NUbots Codebase is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The NUbots Codebase is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the NUbots Codebase.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Copyright 2013 NUBots <nubots@nubots.net>
 */
syntax = "proto3";

package message.vision;

import "Neutron.proto";
import "Vector.proto";

import "message/Geometry.proto";
import "message/input/Sensors.proto";
import "message/input/Image.proto";

message ClassifiedImage {
    enum SegmentClass {
        UNKNOWN_CLASS = 0;
        FIELD         = 1;
        BALL          = 2;
        GOAL          = 3;
        LINE          = 4;
        CYAN_TEAM     = 5;
        MAGENTA_TEAM  = 6;
    }

    message Segment {
        SegmentClass segmentClass = 1;
        uint32       length       = 2;
        uint32       subsample    = 3;
        ivec2        start        = 4;
        ivec2        end          = 5;
        ivec2        midpoint     = 6;
        int32        previous     = 7;
        int32        next         = 8;
    }

    message SeedPoints {
        repeated ivec2 points = 1;
    }

    // The sensor frame that happened with this image
    input.Sensors             sensors            = 1 [(pointer) = SHARED];

    // The image that was used to create this classified image
    input.Image               image              = 2 [(pointer) = SHARED];

    // Our images dimensions
    uvec2                     dimensions         = 3;

    // Points that are on the edge of the ball
    repeated SeedPoints       ballSeedPoints     = 4 [(array_size) = 3];

    // Points that could make up the ball
    repeated ivec2            ballPoints         = 5;

    // Our horizon
    Line                      horizon            = 6;

    // The points of the visual horizon
    repeated ivec2            visualHorizon      = 7;

    // Our segments, split into vertical and horizontal components
    repeated Segment          horizontalSegments = 8;
    repeated Segment          verticalSegments   = 9;
    //map<uint32, Segment>      horizontalSegments = 8;
    //map<uint32, Segment>      verticalSegments   = 9;
}

