/*
 * This file is part of the NUbots Codebase.
 *
 * The NUbots Codebase is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The NUbots Codebase is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the NUbots Codebase.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Copyright 2013 NUBots <nubots@nubots.net>
 */

syntax = "proto3";

package message.input;

import "Vector.proto";

message MotionCapture {
    message Marker {
        uint32        id       = 1;
        fvec3         position = 2;
        float         size     = 3;
    }

    message MarkerSet {
        string          name    = 1;
        repeated Marker markers = 2;
    }

    message RigidBody {
        uint32          id            = 1;
        fvec3           position      = 2;
        fvec4           rotation      = 3;
        repeated Marker markers       = 4;
        float           error         = 5;
        bool            trackingValid = 6;

        // Information added by the model
        string          name          = 7;
        fvec3           offset        = 8;
        uint32          parent        = 9;
        repeated uint32 children      = 10;
    }

    message Skeleton {
        uint32             id    = 1;
        repeated RigidBody bones = 2;

        // Information added by the model
        string             name  = 3;
    }

    message LabeledMarker {
        Marker        marker           = 1;
        bool          occluded         = 2;
        bool          pointCloudSolved = 3;
        bool          modelSolved      = 4;
    }

    message Channel {
        repeated float channel = 1;
    }

    message ForcePlate {
        uint32           id       = 1;
        repeated Channel channels = 2;
    }

    uint32                 frameNumber          = 1;
    float                  latency              = 2;
    uint32                 timecode             = 3;
    uint32                 timecodeSub          = 4;
    double                 timestamp            = 5;
    bool                   recording            = 6;
    bool                   trackedModelsChanged = 7;

    repeated MarkerSet     markerSets           = 8;
    repeated Marker        markers              = 9;
    repeated RigidBody     rigidBodies          = 10;
    repeated Skeleton      skeletons            = 11;
    repeated LabeledMarker labeledMarkers       = 12;
    repeated ForcePlate    forcePlates          = 13;
}
